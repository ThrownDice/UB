기본적인 convention

1. 서로의 코드를 직접 만지기 보다 서로의 코드에 코멘트를 남기면서 규칙을 정해서
   코드를 작성한 사람이 수정할 수 있도록 할 것.

   (매우 매우 중요, 비단 저랑 협업 하는것 이외에도 개발자간의 충돌, 소스간의 충돌,
    협업하면서 사람과 사람간의 충돌은 이런 작은 것을 소홀히 하면서 일어날 수 있음)

   (일방적으로 코드를 수정할 경우, 코드를 수정한 사람이 수정한 코드가 다른 어떤
	영향을 다른 코드에 줄 수 있는지 알기 힘들다.)

2. git에 새로운 branch를 만들 때 서로에게 알리고, 어떤 소스에서 갈라져 나온
   branch인지 알 수 있도록 하기.
   (팀원이 아직 0.0.1 버전을 작업하고 master에 변경사항을 반영하기 전에,
    다른 팀원이 master에서 0.0.2 버전의 branch를 따오게 되면, 0.0.2 버전에서
    작업하고 있는 팀원은 0.0.1 버전에서 작업하던 부분을 알 수가 없다.
     -> 추가적인 작업의 필요성이 있을 지도 모름

3. 서로가 어떤 기능을 구현 할 것이며, 어떤 문제가 있는지 서로가 공유 할 수 있도록 하기
   git의 issue에 추가 해두면, 다른 팀원이 이런 문제가 있는데 내가 해결 할 수 있을지도
   모르고, 그런 문제가 있으니 자신이 작성중인 코드에 어떤 문제가 있을 수 있을지
   확인 할 수 있도록 해야 한다.

4. 쓸데 없은 주석은 달지 않도록 하기. 
   Google Convention, NHN Convention 공통으로 강조하는 사항
   eg. if(found) /* todo : */, else /* todo */
   개발자라면 누가 봐도 뭘 찾았을 때 뭐하고, 못찾았을 때 뭐하는구나 알 수 있음.
   여기에 //만약에 found가 true이면 찾았으니 blah blah
   이렇게 주석 달 필요 없음

5. 커밋 단위는 기능 단위로.
   예를 들어 Term controller의 render 함수를 구현했다면 커밋.
   만약에 render 함수를 다 구현하지는 못했는데, 많은 길을 건너왔다고 생각하면 커밋.
   (커밋은 소스 추적의 단위가 되므로, 나중에 문제 생겼을 때 길을 거슬러 올라가기 위해
    표식을 해둔다고 생각할 것)

6. 커밋의 메시지 통일화
   예: src : implement Term.php's main function
   이렇게 해두면 아 src의 Term.php의 main 함수를 구현했군! 쉽게 알 수 있다.
   따라서 서로 협의해서 커밋 메시지를 작성하는 간단한 규칙을 만드는게 좋을 듯

7. 빨리 뷰페이지 만들어주셈